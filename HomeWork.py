# Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с повторениями). Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# Пользователь вводит 2 числа. n — кол-во элементов первого множества. m — кол-во элементов второго множества. Затем пользователь вводит сами элементы множеств.
from random import randint
n = int(input("введите количество элементов 1 списка: "))
m = int(input("введите количество элементов 2 списка: "))
list1 = [randint(0, 10) for i in range(n)]
list2 = [randint(0, 10) for i in range(m)]
print(list1, end=" ")
print("\n")
print(list2, end=" ")

list3 = []
for i in range(len(list1)):
    for j in range(len(list2)):
        if list1[i] == list2[j]:
            temp = list1[i]
            list3.append(temp)
        else:
            j +=1
    i +=1
print("\n")
print(sorted(set(list3)))

# Задача 24: В фермерском хозяйстве в Карелии выращивают чернику. Она растёт на круглой грядке, причём кусты высажены только по окружности. Таким образом, у каждого куста есть ровно два соседних. Всего на грядке растёт N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло различное число ягод — на i-ом кусте выросло ai ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники. Эта система состоит из управляющего модуля и нескольких собирающих модулей. Собирающий модуль за один заход, находясь непосредственно перед некоторым кустом, собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может собрать за один заход собирающий модуль, находясь перед некоторым кустом заданной во входном файле грядки.
n = int(input('Введите количество кустов черники: '))
list1 = list()
for i in range(n):
    a = int(input('Введите количество ягод на кусте: '))
    list1.append(a)

list1_count = list()
for i in range(len(list1)):
       list1_count.append(list1[i-2] + list1[i-1] + list1[i])
print(max(list1_count))
